# [HTML/CSS] display(inline-block, flex)를 이용하여 grid만들기

## display
dispay는 css 레이아웃 속성중 하나이다.

### 1. inline-block
**1-1. inline-block이란?**
	내가 정하거나 필요한 크기만큼을 width로 가진다.
	
inline-block을 적용하였을 경우, 

```
<sytle>
	.text{
		display: inline-block;
		width: 100px;
		height: 50px;
	}
</sytle>
```


<a href="https://ibb.co/bR5ATJ"><img src="https://preview.ibb.co/kfvoFy/2018_05_29_12_56_51.png" alt="2018_05_29_12_56_51" border="0"></a>

inline-block이 적용되는 위치는 상대적으로 다르게 표시된다. 
이 때 **수직정렬**을 이용하여 이 문제를 해결할 수 있다.

**1-2. vertical-align (수직 정렬)**
 1) inline 과 inline-block에 적용되는 속성이다.
 2) 다른 inline요소에 대한 상대적인 정렬이다.
 3) 기본 값은 baseline이다.
	 3-1) baseline은 상대적으로 다르게 계산된 값이므로 가급적 사용하지않고 그 외의 값을 사용한다.

```
<sytle>
	.text{
		display: inline-block;
		vertical-align: top;
		/* display가 inline-block일 경우,
			꼭 vertical-align: top;도 같이 적어주는 것이 좋다.
			*/
		width: 100px;
		height: 50px;
	}
</sytle>
```

<a href="https://ibb.co/b5A5vy"><img src="https://preview.ibb.co/n12w2d/2018_05_29_12_57_21.png" alt="2018_05_29_12_57_21" border="0"></a>

보다 깔끔한 정렬을 위해 사용해주는 것이 좋다.

**1-3. line-block을 이용하여 그리드 만들기**

```
	.title {
		display: inline-block;
		vertical-align: top;
		width: calc(100% / 6.5);
		height: 50px;
	}
```
> 서로 다른 단위의 값을 계산할 때는 **calc()**를 사용한다.


<a href="https://ibb.co/cJZJhd"><img src="https://preview.ibb.co/iawnay/2018_05_29_7_24_50.png" alt="2018_05_29_7_24_50" border="0"></a>
**1-4. inline-block 사용 시 여백/공백 제거 방법**
 위와 같이 만들었을 경우 각 요소들 사이에 공백이 생긴다.

1) 각 요소들 간에 4px만큼의 공백이 생긴다. 
 이 경우, **margin-right: -4px;** 를 사용하면  이 문제를 해결 할 수 있다.
<a href="https://ibb.co/bFO5TJ"><img src="https://preview.ibb.co/bWp12d/2018_05_29_7_26_12.png" alt="2018_05_29_7_26_12" border="0"></a>

 2) 요소와 body간의 공백이 생긴다. 
 이 경우, body에 **padding: 0;** , **margin: 0;** 을 사용하여 이 문제를 해결할 수 있다.
<a href="https://ibb.co/eYgW2d"><img src="https://preview.ibb.co/g5H4Nd/2018_05_29_7_27_02.png" alt="2018_05_29_7_27_02" border="0"></a>


*****
### 2. flex
**2-1. flex란?**
1) flex는 주어진 공간 안에서 크기와 위치를 자동으로 조정하여준다. 
2) flex를 사용할 경우, **부모 요소**에 이 속성을 지정하여 사용한다.



**2-2. flex값에 따른 차이**

**1) flex: 1;**
```
	<div class="title">
 		<div class="sub">2</div>
 		<div class="sub">2</div>
 		<div class="sub">2</div>
 		<div class="sub">2</div>
 		<div class="sub">2</div>
 		<div class="sub">2</div>
 	</div>
```
```
<style>
	.title{
		display: flex;
		height: 50px;
		border: 1px solid white;
		background: #ffc83f;
	}
	.title > .sub{
		flex: 1;
		border: 1px solid white;
	}
</style>
```
<a href="https://ibb.co/byoVTJ"><img src="https://preview.ibb.co/iY3KNd/2018_05_29_7_36_14.png" alt="2018_05_29_7_36_14" border="0"></a>

**2) flex 1과 2 함께 사용하기**
```
	<div class="title">
 		<div class="sub1">1</div>
 		<div class="sub1">1</div>
 		<div class="sub2">2</div>
 		<div class="sub2">2</div>
 		<div class="sub2">2</div>
 		<div class="sub2">2</div>
 		<div class="sub2">2</div>
 	</div>
```
```
<style>
	.title {
		display: flex;
		height: 50px;
		border: 1px solid white;
		background: #ffc83f;
	}
	.title > .sub1 {
		flex: 1;
		border: 1px solid white;
	}
	.title > .sub2 {
		flex: 2;
		border: 1px solid white;		
	}
</style>
```
<a href="https://ibb.co/iBZ12d"><img src="https://preview.ibb.co/gtgg2d/2018_05_29_7_39_57.png" alt="2018_05_29_7_39_57" border="0"></a>
****
### 3. inline-block과 flex의 차이
**inline-block**를 사용할 경우, width(넓이)를 직접 정해주어야한다.

**flex**를 사용할 경우, flex값만 지정해주면 알아서 width(넓이)를 정해주기 때문에 따로 계산하여 정할 필요가 없다.